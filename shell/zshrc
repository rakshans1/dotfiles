export TERM="xterm-256color"

export ZSH=~/.oh-my-zsh

ZSH_CUSTOM=$HOME/dotfiles/zsh

ZSH_DISABLE_COMPFIX=true

source $ZSH_CUSTOM/themes/powerlevel.sh

source $ZSH_CUSTOM/plugins/zshhighlight.sh

plugins=(vi-mode git git-extras git-open zsh-completions zsh-syntax-highlighting zsh-autosuggestions forgit docker docker-compose)

source $ZSH/oh-my-zsh.sh

bindkey -v

# User configuration
export ANDROID_HOME=${HOME}/Android/Sdk
export GRADLE_HOME="/usr/share/gradle"
export GOPATH=${HOME}/projects/go

export GOPATH=${HOME}/projects/go
export CARGO_HOME=$HOME/.cargo
export DENO_HOME=$HOME/.deno

# If directory exists they will be added to the path env variable
declare -a dir_path
dir_path=(
  "$HOME/dotfiles/bin"
  "$HOME/.local/bin"
  "/usr/local/go/bin"
  "$GOPATH/bin"
  "$CARGO_HOME/bin"
  "$DENO_HOME/bin"
  "$ANDROID_HOME/tools"
  "$ANDROID_HOME/tools/bin"
  "$ANDROID_HOME/emulator"
  "$ANDROID_HOME/platform-tools"
  "$GRADLE_HOME/bin"
  "$HOME/.garden/bin"
)

for dir in ${(k)dir_path[@]}
do
  if [ -d ${dir} ]; then
    PATH="$PATH:${dir}"
  fi
done

unset dir_path

export PATH

if [ "$(uname 2> /dev/null)" = "Linux" ]; then
  source /usr/share/autojump/autojump.sh
fi
if [ "$(uname 2> /dev/null)" = "Darwin" ]; then
  source /usr/local/share/autojump/autojump.zsh
fi
source $HOME/.nvm/nvm.sh

# fzf config
export FZF_DEFAULT_COMMAND='fd --type file --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
 --color=fg:#C6C8D1,bg:#161821,hl:#89b8c2
 --color=fg+:#d2d4de,bg+:#262626,hl+:#95c4ce
 --color=info:#b4be82,prompt:#e27878,pointer:#a093c7
 --color=marker:#c0ca8e,spinner:#ada0d3,header:#84a0c6
'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


export RIPGREP_CONFIG_PATH=~/.ripgreprc

export LS_COLORS="$(vivid generate ayu)"

export MANPAGER='sh -c "col -bx | bat --language=man --style=grid --color=always --decorations=always --theme='"'Monokai Extended Light'"'"'

# Auto change node version with .nvmrc
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc


# Load the shell dotfiles
for file in $HOME/dotfiles/shell/{shell_aliases,shell_functions}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Load the shell dotfiles
for file in $HOME/dotfiles/shell/work/{work_aliases,work_functions}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;


# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export EDITOR='vim'

export KEYTIMEOUT=1

stty stop undef
stty start undef

# partial history expansion in vim mode
bindkey "^P" up-line-or-search
bindkey "^N" down-line-or-search
bindkey "^h" backward-kill-word
bindkey "^J" end-of-line
